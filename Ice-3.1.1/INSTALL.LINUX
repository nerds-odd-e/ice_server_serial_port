======================================================================
Requirements
======================================================================


Operating System
----------------

Ice is expected to build and run properly on any recent Linux
distribution for x86 and x86_64. However, Ice is officially supported
only on:

 - Fedora Core 5 for x86 or x86_64
 - RedHat Linux Enterprise 4.2 for x86 or x86_64


C++ compiler
------------

Ice is expected to build properly with GCC 3.3 or later.  However,
only the following compilers are officially supported:

 - GCC 4.1.x on Fedora Core 5
 - GCC 3.4.4 on RedHat Linux Enterprise 4.2

Third-party libraries
---------------------

Ice has dependencies on a number of third-party libraries:

- Berkeley DB 4.3.29 configured with --enable-cxx.

  If you intend to use Ice for Java with Berkeley DB, you must also
  include the option --enable-java.

- expat 1.9x

- OpenSSL 0.9.7 or later (OpenSSL 0.9.8 or later recommended)

- bzip2 1.0

Berkeley DB, expat, OpenSSL, and bzip2 are usually included with your 
Linux distribution, or you can download them from the following 
locations:

Berkeley DB    http://www.sleepycat.com/download            
expat          http://sourceforge.net/projects/expat/
OpenSSL        http://www.openssl.org
bzip2          http://sources.redhat.com/bzip2

Python
------

You will need Python to run the automated test suite. If you have no
interest in running the test scripts, Python is not required.


======================================================================
Compilation and Testing
======================================================================

Extract the Ice archive in any directory you like (for example, in
your home directory):

$ tar xvfz Ice-3.1.1.tar.gz

Change the working directory to Ice-3.1.1:

$ cd Ice-3.1.1

Edit config/Make.rules to establish your build configuration. The
comments in the file provide more information. Pay particular
attention to the variables that define the locations of the third-
party libraries.

Now you're ready to build Ice:

$ make

This will build the Ice core libraries, services, tests and examples.
After a successful build, you can run the test suite, provided that
you have installed Python:

$ make test

This is equivalent to:

$ python allTests.py

If everything worked out, you should see lots of "ok" messages. In
case of a failure, the tests abort with "failed".

If you want to try out any of the demos, make sure to update your PATH
environment variable to add the "bin" directory, and your
LD_LIBRARY_PATH environment variable to add the "lib" directory:

$ export PATH=`pwd`/bin:$PATH
$ export LD_LIBRARY_PATH=`pwd`/lib:$LD_LIBRARY_PATH


======================================================================
64 bit builds on x86_64
======================================================================

To build Ice in 64 bit mode, you need to do the following:

- Obtain or build all the third-party dependencies, and put the 64 bit
  libraries in the "lib64" directories. For example, put Berkeley DB
  64 bit libraries in $DB_HOME/lib64.

- Build and test as described above (with gcc).

======================================================================
32 bit builds on x86_64
======================================================================

By default, builds on x86_64 are 64-bit. To perform a 32-bit build
on a x86_64 Linux system, set the environment variable LP64 to no,
as shown below:
  $ export LP64=no

======================================================================
Installation
======================================================================

Simply run "make install". This will install Ice in the directory
specified by the "prefix" variable in config/Make.rules.

After installation, make sure that the <prefix>/bin directory is in
your PATH, and the <prefix>/lib directory is in your LD_LIBRARY_PATH.
If you built Berkeley DB yourself, please ensure that its installation
lib directory is also in your LD_LIBRARY_PATH. When compiling Ice
programs, you must pass the location of the <prefix>/include directory
to the compiler with the -I option, and the location of the
<prefix>/lib directory with the -L option.  

On a x86_64 system, the libraries are installed in <prefix>/lib64
unless LP64 is set to no. No other changes are necessary.
